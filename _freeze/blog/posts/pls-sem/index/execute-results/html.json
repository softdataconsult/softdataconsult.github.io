{
  "hash": "0f67b12fe07718817678f2e107bf9a99",
  "result": {
    "markdown": "---\ntitle: \"Partial Least Squares Structural Equation Modeling (PLS-SEM)\"\nauthor: \"\"\ndate: \"2024-09-28\"\ncategories: [Python, R, Analytics, SmartPLS]\nimage: \"pls-sem.png\"\n---\n\n\n\nIntroduction to Structural Equation Modeling, Fundamentals of PLS-SEM Data Preparation and Preprocessing, Measurement Model Estimation, Structural Model Estimation and Interpretation, Advanced Topics in PLS-SEM, Case Studies and Practical Projects.\n\n\n### **Group 1: App Response Time**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Group 1: Data on App Response Time\ndata1 <- data.frame(\n  Number_of_Users = c(50, 80, 60, 100, 90, 70, 110, 95, 85, 120),\n  Number_of_Sessions = c(100, 150, 120, 200, 180, 130, 210, 170, 160, 220),\n  API_Calls_Per_Session = c(20, 35, 25, 40, 38, 30, 45, 34, 32, 50),\n  App_Response_Time = c(120, 200, 150, 240, 220, 170, 260, 210, 190, 280)\n)\n\n# 1. Multiple Linear Regression for App Response Time\nmodel1 <- lm(App_Response_Time ~ Number_of_Users + Number_of_Sessions + API_Calls_Per_Session, data = data1)\n\n# Display model summary\nsummary(model1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> lm(formula = App_Response_Time ~ Number_of_Users + Number_of_Sessions + \n#>     API_Calls_Per_Session, data = data1)\n#> \n#> Residuals:\n#>    Min     1Q Median     3Q    Max \n#> -3.650 -1.940 -0.386  1.876  3.393 \n#> \n#> Coefficients:\n#>                       Estimate Std. Error t value Pr(>|t|)    \n#> (Intercept)             6.6662     4.2110   1.583 0.164500    \n#> Number_of_Users         0.3777     0.2931   1.289 0.244970    \n#> Number_of_Sessions      0.3870     0.1574   2.459 0.049189 *  \n#> API_Calls_Per_Session   2.9051     0.4844   5.997 0.000967 ***\n#> ---\n#> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 2.935 on 6 degrees of freedom\n#> Multiple R-squared:  0.9976,\tAdjusted R-squared:  0.9964 \n#> F-statistic: 842.8 on 3 and 6 DF,  p-value: 2.899e-08\n```\n:::\n\n```{.r .cell-code}\n# 2. Evaluate the most impactful variable (based on coefficients and p-values)\n\n# 3. Predict response time for 90 users, 170 sessions, and 35 API calls per session\nnew_data1 <- data.frame(Number_of_Users = 90, Number_of_Sessions = 170, API_Calls_Per_Session = 35)\npredicted_time1 <- predict(model1, newdata = new_data1)\npredicted_time1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>        1 \n#> 208.1231\n```\n:::\n:::\n\n\n---\n\n### **Group 2: Product Sales**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Group 2: Data on Product Sales\ndata2 <- data.frame(\n  Ad_Budget = c(1000, 2000, 1500, 3000, 2500, 1800, 3500, 3200, 2200, 2700),\n  Price = c(50, 45, 60, 40, 55, 48, 35, 38, 52, 46),\n  Number_of_Reviews = c(20, 35, 25, 50, 45, 30, 60, 55, 40, 50),\n  Product_Sales = c(150, 200, 160, 250, 220, 180, 300, 270, 210, 240)\n)\n\n# 1. Multiple Linear Regression for Product Sales\nmodel2 <- lm(Product_Sales ~ Ad_Budget + Price + Number_of_Reviews, data = data2)\n\n# Display model summary\nsummary(model2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> lm(formula = Product_Sales ~ Ad_Budget + Price + Number_of_Reviews, \n#>     data = data2)\n#> \n#> Residuals:\n#>    Min     1Q Median     3Q    Max \n#> -5.373 -3.485 -1.184  2.405  9.569 \n#> \n#> Coefficients:\n#>                    Estimate Std. Error t value Pr(>|t|)   \n#> (Intercept)       138.88516   23.47493   5.916  0.00104 **\n#> Ad_Budget           0.01597    0.01911   0.836  0.43527   \n#> Price              -1.02754    0.35956  -2.858  0.02889 * \n#> Number_of_Reviews   2.19342    1.09883   1.996  0.09292 . \n#> ---\n#> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 5.596 on 6 degrees of freedom\n#> Multiple R-squared:  0.991,\tAdjusted R-squared:  0.9864 \n#> F-statistic:   219 on 3 and 6 DF,  p-value: 1.616e-06\n```\n:::\n\n```{.r .cell-code}\n# 2. Identify the most impactful variable on sales\n\n# 3. Predict sales for $2000 ad budget, $50 price, and 40 reviews\nnew_data2 <- data.frame(Ad_Budget = 2000, Price = 50, Number_of_Reviews = 40)\npredicted_sales2 <- predict(model2, newdata = new_data2)\npredicted_sales2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>        1 \n#> 207.1905\n```\n:::\n:::\n\n\n---\n\n### **Group 3: User Experience Score**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Group 3: Data on User Experience Score\ndata3 <- data.frame(\n  Time_on_Page = c(5.0, 6.0, 4.5, 7.0, 5.5, 6.5, 3.0, 7.5, 4.0, 8.0),\n  Clicks = c(30, 40, 25, 50, 35, 45, 20, 55, 28, 60),\n  Bounce_Rate = c(45, 50, 55, 35, 40, 42, 60, 30, 58, 25),\n  User_Experience_Score = c(8, 9, 7, 10, 8, 9, 6, 10, 7, 10)\n)\n\n# 1. Multiple Linear Regression for User Experience Score\nmodel3 <- lm(User_Experience_Score ~ Time_on_Page + Clicks + Bounce_Rate, data = data3)\n\n# Display model summary\nsummary(model3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> lm(formula = User_Experience_Score ~ Time_on_Page + Clicks + \n#>     Bounce_Rate, data = data3)\n#> \n#> Residuals:\n#>      Min       1Q   Median       3Q      Max \n#> -0.37616 -0.15336  0.00091  0.13709  0.45821 \n#> \n#> Coefficients:\n#>              Estimate Std. Error t value Pr(>|t|)  \n#> (Intercept)   1.60617    2.27870   0.705   0.5073  \n#> Time_on_Page  0.95829    0.38843   2.467   0.0487 *\n#> Clicks        0.00880    0.04290   0.205   0.8443  \n#> Bounce_Rate   0.02250    0.02693   0.836   0.4354  \n#> ---\n#> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 0.3311 on 6 degrees of freedom\n#> Multiple R-squared:  0.9642,\tAdjusted R-squared:  0.9464 \n#> F-statistic: 53.94 on 3 and 6 DF,  p-value: 9.863e-05\n```\n:::\n\n```{.r .cell-code}\n# 2. Interpretation of regression coefficients\n\n# 3. Assess which variable (Time_on_Page or Bounce_Rate) has the stronger influence\n\n# 4. Predict User Experience Score for 6 minutes on page, 40 clicks, and 45% bounce rate\nnew_data3 <- data.frame(Time_on_Page = 6, Clicks = 40, Bounce_Rate = 45)\npredicted_score3 <- predict(model3, newdata = new_data3)\npredicted_score3\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>        1 \n#> 8.720549\n```\n:::\n:::\n\n\n---\n\n### **Group 4: App Engagement Score**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Group 4: Data on App Engagement Score\ndata4 <- data.frame(\n  Notifications_Sent = c(5, 10, 8, 12, 6, 15, 9, 20, 7, 18),\n  In_App_Ads = c(3, 5, 4, 6, 2, 7, 5, 8, 3, 6),\n  Time_Spent = c(20, 30, 25, 40, 18, 50, 28, 60, 22, 55),\n  Engagement_Score = c(7, 8, 7.5, 9, 6.5, 9.5, 8, 10, 7, 9.5)\n)\n\n# 1. Multiple Linear Regression for App Engagement Score\nmodel4 <- lm(Engagement_Score ~ Notifications_Sent + In_App_Ads + Time_Spent, data = data4)\n\n# Display model summary\nsummary(model4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> lm(formula = Engagement_Score ~ Notifications_Sent + In_App_Ads + \n#>     Time_Spent, data = data4)\n#> \n#> Residuals:\n#>      Min       1Q   Median       3Q      Max \n#> -0.16547 -0.07583 -0.01120  0.06028  0.17117 \n#> \n#> Coefficients:\n#>                    Estimate Std. Error t value Pr(>|t|)    \n#> (Intercept)         5.16049    0.12193  42.323 1.16e-08 ***\n#> Notifications_Sent -0.09078    0.06471  -1.403  0.21023    \n#> In_App_Ads          0.31597    0.06353   4.974  0.00252 ** \n#> Time_Spent          0.07155    0.02401   2.980  0.02464 *  \n#> ---\n#> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 0.1301 on 6 degrees of freedom\n#> Multiple R-squared:  0.9925,\tAdjusted R-squared:  0.9888 \n#> F-statistic: 265.9 on 3 and 6 DF,  p-value: 9.077e-07\n```\n:::\n\n```{.r .cell-code}\n# 2. Evaluate the variable with the greatest impact on engagement score\n\n# 3. Predict Engagement Score for 12 notifications, 6 in-app ads, and 45 minutes spent in app\nnew_data4 <- data.frame(Notifications_Sent = 12, In_App_Ads = 6, Time_Spent = 45)\npredicted_engagement4 <- predict(model4, newdata = new_data4)\npredicted_engagement4\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>        1 \n#> 9.186572\n```\n:::\n:::\n\n\n---\n\n### **Group 5: Website Traffic**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Group 5: Data on Website Traffic\ndata5 <- data.frame(\n  Number_of_Articles = c(5, 8, 6, 10, 7, 12, 9, 15, 6, 14),\n  Social_Media_Mentions = c(10, 20, 15, 25, 12, 30, 22, 35, 18, 33),\n  Backlinks = c(50, 75, 60, 100, 65, 120, 85, 150, 70, 130),\n  Website_Traffic = c(300, 450, 350, 500, 380, 600, 460, 700, 360, 650)\n)\n\n# 1. Multiple Linear Regression for Website Traffic\nmodel5 <- lm(Website_Traffic ~ Number_of_Articles + Social_Media_Mentions + Backlinks, data = data5)\n\n# Display model summary\nsummary(model5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> lm(formula = Website_Traffic ~ Number_of_Articles + Social_Media_Mentions + \n#>     Backlinks, data = data5)\n#> \n#> Residuals:\n#>    Min     1Q Median     3Q    Max \n#> -9.808 -7.895 -2.358  4.237 19.128 \n#> \n#> Coefficients:\n#>                        Estimate Std. Error t value Pr(>|t|)    \n#> (Intercept)           117.51442   11.74217  10.008 5.77e-05 ***\n#> Number_of_Articles     31.30286    7.69828   4.066   0.0066 ** \n#> Social_Media_Mentions   3.01941    2.20749   1.368   0.2204    \n#> Backlinks               0.03395    1.00310   0.034   0.9741    \n#> ---\n#> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 11.89 on 6 degrees of freedom\n#> Multiple R-squared:  0.9949,\tAdjusted R-squared:  0.9924 \n#> F-statistic: 391.5 on 3 and 6 DF,  p-value: 2.867e-07\n```\n:::\n\n```{.r .cell-code}\n# 2. Assess the most important driver of web traffic\n\n# 3. Predict Website Traffic for 8 articles, 25 social media mentions, and 90 backlinks\nnew_data5 <- data.frame(Number_of_Articles = 8, Social_Media_Mentions = 25, Backlinks = 90)\npredicted_traffic5 <- predict(model5, newdata = new_data5)\npredicted_traffic5\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>        1 \n#> 446.4778\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}